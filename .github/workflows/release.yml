name: Github Packages
on:
  push:
    branches: [main]
jobs:
  build:
    name: 'Build'
    # name: 'Install dependencies'
    runs-on: ubuntu-latest
    steps:          
      - name: Git config
        run: git config --global user.email "${{ secrets.GIT_EMAIL }}" && git config --global user.name "${{ secrets.GIT_USERNAME }}"

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup configuration for GH Packages
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@barking-welpe'

      - name: Install
        # if: steps.restore-lerna.outputs.cache-hit != 'true'
        run: yarn

      - name: Lerna Bootstrap
        # if: steps.restore-lerna.outputs.cache-hit != 'true'
        run: yarn lerna bootstrap

  # test:
  #   name: 'Test'
  #   runs-on: ubuntu-latest
  #   needs: install
  #   steps:
      # - name: Checkout
      #   uses: actions/checkout@v2

      # - uses: actions/setup-node@v2
      #   with:
      #     node-version: '14'

      - name: Test packages
        run: yarn test

  # lint:
  #   name: 'Lint'
  #   runs-on: ubuntu-latest
  #   needs: install
  #   steps:
      # - name: Checkout
      #   uses: actions/checkout@v2

      # - name: Setup configuration for GH Packages
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: '14.x'
      #     registry-url: 'https://npm.pkg.github.com'
      #     scope: '@barking-welpe'

      - name: Lint packages
        run: yarn lint

  # build_and_publish:
  #   name: 'Build library'
  #   runs-on: ubuntu-latest
  #   needs: [test, lint]
  #   steps:
      # - name: Checkout
      #   uses: actions/checkout@v2

      # - name: Setup configuration for GH Packages
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: '14.x'
      #     registry-url: 'https://npm.pkg.github.com'
      #     scope: '@barking-welpe'

      - name: Build and check docs
        run: yarn api-docs

      # Publish to GitHub Packages
      - run: npm run prod-publish
        if: ${{ success() }}
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}
